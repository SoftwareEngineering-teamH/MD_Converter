import java.util.ArrayList;

public class Document implements MDElement
{
	//Node type
	static final private int Header = 1;
	static final private int CodeBlock = 2;
	static final private int QuotedBlock = 3;
	static final private int ItemList = 4;
	static final private int Horizontal = 5;
	static final private int TEXT = 6;
	
	//accept 
	public void accept(MDElementVisitor visitor)
	{
		visitor.visitDocument(this);
	}
	
	// attribute
	String buffer1 = "";
	String buffer2 = "";
	String md_data = "";
	String html_data = "";
	
	ArrayList<Node> node_list = new ArrayList<Node>();
	
	//method
	public int check(String buffer1, String buffer2)
	{
		int type_num = 0;
		
		if(buffer2.startsWith("==") || buffer2.startsWith("--") || buffer1.startsWith("#") || buffer1.startsWith("##") || buffer1.startsWith("###"))
		{
			boolean isH = true;
			
			if(buffer2.startsWith("=="))
			{
				String[] str_hdc = buffer2.split("=");
				System.out.println(str_hdc.length);
				if(str_hdc.length == 0)
					isH = true;
				else
					isH = false;
			}
			else if(buffer2.startsWith("--"))
			{
				String[] str_hdc = buffer2.split("-");
				for(int i=0; i<str_hdc.length; i++)
				{
					if(str_hdc[i].equals(""))
						isH = true;
					else
						isH = false;
				}
			}
			
			if(isH)
				type_num = Header;
			else
				type_num = TEXT;
		}
		else if(buffer1.startsWith("==") || buffer1.startsWith("--"))
		{
			//TEXT
			type_num = 0;
		}
		else if(buffer1.startsWith("* ") || buffer1.startsWith("+ ") || buffer1.startsWith("- "))
		{
			type_num = ItemList;
		}
		else if(buffer1.startsWith("1."))
		{
			type_num = 44;
		}
		else if(buffer1.startsWith(">"))
		{
			type_num = QuotedBlock;
		}
		else if(buffer1.startsWith("	"))
		{
			// if sentence starts with tab(or 4 space), it is code block.
			type_num = CodeBlock;
		}
		else
		{
			type_num = TEXT;
		}
		
		return type_num;
	}

	public Node setNode(int type, String data)
	{
		switch(type)
		{
		case 1 : 
			Header hd = new Header();
			return hd.create(data);
		case 2 : 
			CodeBlock cb  = new CodeBlock();
			return cb.create(data);
		case 3 :
			QuotedBlock qb = new QuotedBlock();
			return qb.create(data);
		case 4 :
			ItemList ul = new ItemList();
			return ul.create(data, 4);
		case 44 :
			ItemList ol = new ItemList();
			return ol.create(data, 44);
		case 5 :
			Horizontal hz = new Horizontal();
			return hz.create(data);
		default :
			TextBlock tt = new TextBlock();
			return tt.create(data);
		}
	}

}



